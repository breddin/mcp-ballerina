# Development Dockerfile for MCP Ballerina Server
FROM ballerina/ballerina:2201.12.7

# Install development tools
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        wget \
        git \
        vim \
        htop \
        netcat-openbsd \
        procps \
        ca-certificates \
        dumb-init && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r ballerina && \
    useradd -r -g ballerina -d /app -m -s /bin/bash ballerina && \
    mkdir -p /app/logs /app/data /app/target && \
    chown -R ballerina:ballerina /app

# Set working directory
WORKDIR /app

# Switch to non-root user
USER ballerina

# Copy package files
COPY --chown=ballerina:ballerina Ballerina.toml ./
COPY --chown=ballerina:ballerina package.json ./

# Environment variables for development
ENV BALLERINA_HOME=/ballerina/dist \
    PATH=${BALLERINA_HOME}/bin:$PATH \
    MCP_SERVER_PORT=8080 \
    MCP_METRICS_PORT=9090 \
    LOG_LEVEL=DEBUG \
    JVM_HEAP_SIZE=512m \
    BALLERINA_DEBUG=true \
    HOT_RELOAD=true

# Expose ports
EXPOSE 8080 8443 9090 5005

# Health check for development
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=5 \
  CMD curl -f http://localhost:8080/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["/usr/bin/dumb-init", "--"]

# Development command with debug support
CMD ["sh", "-c", "echo 'Development server starting...' && exec bal run --debug=5005 --observability-included mcp_ballerina_server_enhanced.bal"]

# Labels
LABEL maintainer="bennettreddin" \
      version="0.1.0-dev" \
      description="MCP Ballerina Server - Development Build" \
      environment="development"