{{- if and .Values.monitoring.prometheusRule.enabled .Capabilities.APIVersions.Has "monitoring.coreos.com/v1" }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ include "mcp-ballerina.fullname" . }}
  labels:
    {{- include "mcp-ballerina.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus-rule
    prometheus: kube-prometheus
  annotations:
    {{- include "mcp-ballerina.annotations" . | nindent 4 }}
    description: "Prometheus alerting rules for MCP Ballerina Server"
spec:
  groups:
  - name: {{ include "mcp-ballerina.name" . }}.rules
    interval: 30s
    rules:
    # Recording rules
    - record: {{ include "mcp-ballerina.name" . }}:request_rate_5m
      expr: rate(mcp_ballerina_http_requests_total[5m])
      labels:
        service: {{ include "mcp-ballerina.name" . }}
    
    - record: {{ include "mcp-ballerina.name" . }}:error_rate_5m
      expr: rate(mcp_ballerina_http_requests_total{status=~"5.."}[5m]) / rate(mcp_ballerina_http_requests_total[5m])
      labels:
        service: {{ include "mcp-ballerina.name" . }}
    
    - record: {{ include "mcp-ballerina.name" . }}:response_time_95th_5m
      expr: histogram_quantile(0.95, rate(mcp_ballerina_http_request_duration_seconds_bucket[5m]))
      labels:
        service: {{ include "mcp-ballerina.name" . }}
    
    - record: {{ include "mcp-ballerina.name" . }}:response_time_99th_5m
      expr: histogram_quantile(0.99, rate(mcp_ballerina_http_request_duration_seconds_bucket[5m]))
      labels:
        service: {{ include "mcp-ballerina.name" . }}
    
    # CPU and Memory utilization
    - record: {{ include "mcp-ballerina.name" . }}:cpu_utilization
      expr: rate(container_cpu_usage_seconds_total{pod=~"{{ include "mcp-ballerina.fullname" . }}-.*", container="{{ .Chart.Name }}"}[5m])
      labels:
        service: {{ include "mcp-ballerina.name" . }}
    
    - record: {{ include "mcp-ballerina.name" . }}:memory_utilization
      expr: container_memory_working_set_bytes{pod=~"{{ include "mcp-ballerina.fullname" . }}-.*", container="{{ .Chart.Name }}"} / container_spec_memory_limit_bytes{pod=~"{{ include "mcp-ballerina.fullname" . }}-.*", container="{{ .Chart.Name }}"}
      labels:
        service: {{ include "mcp-ballerina.name" . }}
    
    # Alerting rules
    {{- if .Values.monitoring.prometheusRule.rules.highErrorRate.enabled }}
    - alert: {{ include "mcp-ballerina.name" . | title }}HighErrorRate
      expr: {{ include "mcp-ballerina.name" . }}:error_rate_5m > {{ .Values.monitoring.prometheusRule.rules.highErrorRate.threshold }}
      for: {{ .Values.monitoring.prometheusRule.rules.highErrorRate.duration }}
      labels:
        severity: critical
        service: {{ include "mcp-ballerina.name" . }}
      annotations:
        summary: "{{ include "mcp-ballerina.name" . | title }} has high error rate"
        description: "{{ include "mcp-ballerina.name" . | title }} error rate is {{ "{{" }} $value | humanizePercentage {{ "}}" }} for more than {{ .Values.monitoring.prometheusRule.rules.highErrorRate.duration }}"
        runbook_url: "https://runbooks.company.com/{{ include "mcp-ballerina.name" . }}/high-error-rate"
    {{- end }}
    
    {{- if .Values.monitoring.prometheusRule.rules.highResponseTime.enabled }}
    - alert: {{ include "mcp-ballerina.name" . | title }}HighResponseTime
      expr: {{ include "mcp-ballerina.name" . }}:response_time_95th_5m > {{ .Values.monitoring.prometheusRule.rules.highResponseTime.threshold }}
      for: {{ .Values.monitoring.prometheusRule.rules.highResponseTime.duration }}
      labels:
        severity: warning
        service: {{ include "mcp-ballerina.name" . }}
      annotations:
        summary: "{{ include "mcp-ballerina.name" . | title }} has high response time"
        description: "{{ include "mcp-ballerina.name" . | title }} 95th percentile response time is {{ "{{" }} $value {{ "}}" }}s for more than {{ .Values.monitoring.prometheusRule.rules.highResponseTime.duration }}"
        runbook_url: "https://runbooks.company.com/{{ include "mcp-ballerina.name" . }}/high-response-time"
    {{- end }}
    
    {{- if .Values.monitoring.prometheusRule.rules.highCPU.enabled }}
    - alert: {{ include "mcp-ballerina.name" . | title }}HighCPUUsage
      expr: {{ include "mcp-ballerina.name" . }}:cpu_utilization > {{ .Values.monitoring.prometheusRule.rules.highCPU.threshold }}
      for: {{ .Values.monitoring.prometheusRule.rules.highCPU.duration }}
      labels:
        severity: warning
        service: {{ include "mcp-ballerina.name" . }}
      annotations:
        summary: "{{ include "mcp-ballerina.name" . | title }} has high CPU usage"
        description: "{{ include "mcp-ballerina.name" . | title }} CPU usage is {{ "{{" }} $value | humanizePercentage {{ "}}" }} for more than {{ .Values.monitoring.prometheusRule.rules.highCPU.duration }}"
        runbook_url: "https://runbooks.company.com/{{ include "mcp-ballerina.name" . }}/high-cpu"
    {{- end }}
    
    {{- if .Values.monitoring.prometheusRule.rules.highMemory.enabled }}
    - alert: {{ include "mcp-ballerina.name" . | title }}HighMemoryUsage
      expr: {{ include "mcp-ballerina.name" . }}:memory_utilization > {{ .Values.monitoring.prometheusRule.rules.highMemory.threshold }}
      for: {{ .Values.monitoring.prometheusRule.rules.highMemory.duration }}
      labels:
        severity: critical
        service: {{ include "mcp-ballerina.name" . }}
      annotations:
        summary: "{{ include "mcp-ballerina.name" . | title }} has high memory usage"
        description: "{{ include "mcp-ballerina.name" . | title }} memory usage is {{ "{{" }} $value | humanizePercentage {{ "}}" }} for more than {{ .Values.monitoring.prometheusRule.rules.highMemory.duration }}"
        runbook_url: "https://runbooks.company.com/{{ include "mcp-ballerina.name" . }}/high-memory"
    {{- end }}
    
    - alert: {{ include "mcp-ballerina.name" . | title }}PodNotReady
      expr: kube_pod_status_ready{pod=~"{{ include "mcp-ballerina.fullname" . }}-.*", condition="false"} == 1
      for: 5m
      labels:
        severity: warning
        service: {{ include "mcp-ballerina.name" . }}
      annotations:
        summary: "{{ include "mcp-ballerina.name" . | title }} pod is not ready"
        description: "Pod {{ "{{" }} $labels.pod {{ "}}" }} has been not ready for more than 5 minutes"
        runbook_url: "https://runbooks.company.com/{{ include "mcp-ballerina.name" . }}/pod-not-ready"
    
    - alert: {{ include "mcp-ballerina.name" . | title }}PodCrashLooping
      expr: rate(kube_pod_container_status_restarts_total{pod=~"{{ include "mcp-ballerina.fullname" . }}-.*", container="{{ .Chart.Name }}"}[15m]) > 0
      for: 5m
      labels:
        severity: critical
        service: {{ include "mcp-ballerina.name" . }}
      annotations:
        summary: "{{ include "mcp-ballerina.name" . | title }} pod is crash looping"
        description: "Pod {{ "{{" }} $labels.pod {{ "}}" }} is restarting frequently"
        runbook_url: "https://runbooks.company.com/{{ include "mcp-ballerina.name" . }}/crash-looping"
    
    - alert: {{ include "mcp-ballerina.name" . | title }}ServiceDown
      expr: up{job="{{ include "mcp-ballerina.fullname" . }}-metrics"} == 0
      for: 1m
      labels:
        severity: critical
        service: {{ include "mcp-ballerina.name" . }}
      annotations:
        summary: "{{ include "mcp-ballerina.name" . | title }} service is down"
        description: "{{ include "mcp-ballerina.name" . | title }} metrics endpoint is not responding"
        runbook_url: "https://runbooks.company.com/{{ include "mcp-ballerina.name" . }}/service-down"
    
    - alert: {{ include "mcp-ballerina.name" . | title }}DeploymentReplicasMismatch
      expr: kube_deployment_spec_replicas{deployment="{{ include "mcp-ballerina.fullname" . }}"} != kube_deployment_status_ready_replicas{deployment="{{ include "mcp-ballerina.fullname" . }}"}
      for: 10m
      labels:
        severity: warning
        service: {{ include "mcp-ballerina.name" . }}
      annotations:
        summary: "{{ include "mcp-ballerina.name" . | title }} deployment has replica mismatch"
        description: "Deployment {{ "{{" }} $labels.deployment {{ "}}" }} has {{ "{{" }} $value {{ "}}" }} replicas ready, but expects {{ "{{" }} $labels.spec_replicas {{ "}}" }}"
        runbook_url: "https://runbooks.company.com/{{ include "mcp-ballerina.name" . }}/replica-mismatch"
{{- end }}