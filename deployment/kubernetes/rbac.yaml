apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-ballerina
  namespace: mcp-ballerina
  labels:
    app.kubernetes.io/name: mcp-ballerina
    app.kubernetes.io/component: service-account
    app.kubernetes.io/part-of: mcp-ballerina
    app.kubernetes.io/managed-by: gitops
  annotations:
    description: "Service account for MCP Ballerina Server"
    gitops.argoproj.io/sync-wave: "-3"
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mcp-ballerina
  namespace: mcp-ballerina
  labels:
    app.kubernetes.io/name: mcp-ballerina
    app.kubernetes.io/component: role
    app.kubernetes.io/part-of: mcp-ballerina
rules:
# Basic pod operations
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
# ConfigMap and Secret access
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
# Service discovery
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
# Events for debugging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
# Metrics access
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mcp-ballerina
  namespace: mcp-ballerina
  labels:
    app.kubernetes.io/name: mcp-ballerina
    app.kubernetes.io/component: role-binding
    app.kubernetes.io/part-of: mcp-ballerina
subjects:
- kind: ServiceAccount
  name: mcp-ballerina
  namespace: mcp-ballerina
roleRef:
  kind: Role
  name: mcp-ballerina
  apiGroup: rbac.authorization.k8s.io
---
# ClusterRole for cross-namespace service discovery (if needed)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mcp-ballerina-cluster
  labels:
    app.kubernetes.io/name: mcp-ballerina
    app.kubernetes.io/component: cluster-role
    app.kubernetes.io/part-of: mcp-ballerina
rules:
# Node metrics access
- apiGroups: [""]
  resources: ["nodes", "nodes/metrics", "nodes/stats"]
  verbs: ["get", "list"]
# Custom resource definitions (if MCP extends Kubernetes API)
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mcp-ballerina-cluster
  labels:
    app.kubernetes.io/name: mcp-ballerina
    app.kubernetes.io/component: cluster-role-binding
    app.kubernetes.io/part-of: mcp-ballerina
subjects:
- kind: ServiceAccount
  name: mcp-ballerina
  namespace: mcp-ballerina
roleRef:
  kind: ClusterRole
  name: mcp-ballerina-cluster
  apiGroup: rbac.authorization.k8s.io